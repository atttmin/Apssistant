$defaultFont: SourceHanSans,
'微软雅黑 Light',
'Segoe UI',
Tahoma,
Geneva,
Verdana,
sans-serif;
$white: #FFF;
$black: #000;
$borderColor: #E6E6E6;
$blue: #6CF;
$blueShadow: rgba(102, 204, 255, 0.4);
$red: #E81123;
$fontColor: #5E5E5E;
$fontLightColor: #D7D7D7;
$rounded: 4px;
$fakeBlurColor: rgba(0, 0, 0, 0.05);
$oneLineControlsHeight: 40px;
$ControlsWidth: 140px;
$leftMenuWidth: 260px;
@mixin borderNormal {
	border: {
		width: 1px;
		style: solid;
		color: $borderColor;
		radius: $rounded;
	}
	box-sizing: border-box;
}

@mixin prefix($property, $value, $prefixes: ()) {
	@each $prefix in $prefixes {
		#{$prefix}#{$property}: $value;
	}
	#{$property}: $value;
}

@mixin oneLineControlsHeight ($height) {
	height: $height;
	line-height: $height;
}

@import url(chooselang.css);
@font-face {
	font-family: SourceHanSans;
	src: url('../fonts/SourceHanSans.ttc'), url('../fonts/SourceHanSans.eot');
	/* IE9+ */
}

body,
div,
dl,
dt,
dd,
ul,
ol,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
form,
fieldset,
input,
textarea,
p,
blockquote,
th,
td {
	padding: 0;
	margin: 0;
}

$h: 1,
2,
3,
4;
@for $c from 1 through length($h) {
	h#{nth($h,$c)} {
		font-size: 2.2em - ($c - 1) * 0.4;
		font-weight: 700 + (1 - $c) * 100;
		height: 2.4em - ($c - 1) * 0.4;
		line-height: 2.4em - ($c - 1) * 0.4;
	}
}

a {
	text-decoration: none;
}

table {
	border-spacing: 0;
}

fieldset,
img {
	border: 0;
}

address,
caption,
cite,
code,
dfn,
em,
strong,
th,
var {
	font: {
		weight: normal;
		style: normal;
	}
}

strong {
	font-weight: bold;
}

ol,
ul {
	list-style: none;
	margin: 0;
	padding: 0;
}

caption,
th {
	text-align: left;
}

q:before,
q:after {
	content: '';
}

/* Custom CSS
 * --------------------------------------- */

body {
	border: {
		width: 1px;
		style: solid;
		color: $borderColor;
	}
	box-sizing: border-box;
	font: {
		family: $defaultFont;
		size: 20px;
	}
	background-color: $white;
	color: #5E5E5E;
}

.wrap {
	margin: {
		left: auto;
		right: auto;
	}
	width: 960px;
	position: relative;
}

p {
	font-size: 1em;
	padding-bottom: 10px;
}

hr {
	border: 0;
	height: 1px;
	background-image: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));
}

kbd {
	position: relative;
	top: -4px;
	font-size: 0.8em;
	font-family: $defaultFont;
	box-shadow: 1px 0 1px 0 #EEE, 0 2px 0 2px #CCC, 0 2px 0 3px #666;
	border-radius: 3px;
	margin: 0 3px 0 3px;
	padding: 1px 5px;
	text-transform: capitalize;
	cursor: default;
}

.intro {
	p {
		width: 50%;
		margin: 0 auto;
		font-size: 1.5em;
	}
}


#menu {
	position: fixed;
	top: 0;
	left: 0;
	height: 100%;
	z-index: 70;
	width: $leftMenuWidth;
	padding-top: 40px;
	margin: 0;
	background: $fakeBlurColor;
	overflow: hidden;
	li {
		@include oneLineControlsHeight (60px);
		margin: 0;
		width: $leftMenuWidth;
		font-weight: 100;
		text-shadow: 0 0 40px $black, 0 0 80px $black;
		&.active {
			a {
				font-weight: 600;
				color: $blue;
				font-size: 1.4em;
				text-shadow: 0 0 30px $blue, 0 0 80px $blue;
				cursor: default;
				&:hover {
					box-shadow: none;
					background: transparent;
				}
			}
		}
		a {
			padding-left: 80px;
			display: block;
			height: 100%;
			text-decoration: none;
			color: rgba(0, 0, 0, 0.4);
			white-space: nowrap;
			&:hover {
				background: $white;
				box-shadow: 0 0 40px $white;
				color: $blue;
			}
		}
	}
}

#exitApp {
	position: absolute;
	z-index: 99;
	right: -80px;
	top: -80px;
	width: 200px;
	height: 200px;
	font-size: 1.2em;
	font-weight: 100;
	text-align: center;
	padding: 0;
	border-radius: 50px;
	&:hover {
		background: radial-gradient(rgba(255, 0, 0, 0.2), rgba(0, 0, 0, 0), rgba(0, 0, 0, 0));
		a {
			color: $red;
		}
	}
	a {
		display: block;
		width: 40px;
		height: 40px;
		margin: (200px - 40px) / 2;
		color: $fontColor;
	}
}

#fullpage {
	padding: {
		top: 0;
		right: 0;
		left: $leftMenuWidth;
		bottom: 0;
	}
}

fieldset {
	padding: {
		top: 0;
		right: 40px;
		bottom: 0;
		left: 40px;
	}
	margin: {
		right: -40px;
		bottom: 0;
		left: -40px;
	}
	&:hover {
		background-color: $fakeBlurColor;
	}
	legend {
		@include oneLineControlsHeight (60px);
		cursor: default;
		font-size: 1.2em;
		font-weight: 700;
		float: left;
	}
	div {
		clear: both;
	}
}

.page {
	cursor: default;
	padding: {
		top: 40px;
		right: 40px;
		bottom: 0;
		left: 40px;
	}
}

div.hotkey {
	@include oneLineControlsHeight ($oneLineControlsHeight);
	cursor: pointer;
	width: $ControlsWidth;
	font-size: 1em;
	background-color: transparent;
	box-sizing: border-box;
	float: right;
	clear: none;
	margin-top: 10px;
	margin-bottom: 10px;
	text-align: center;
	border: {
		width: 1px;
		style: solid;
		color: transparent;
		radius: $rounded;
	}
	&:hover {
		border: {
			color: $blue;
		}
		background-color: $white;
	}
}

#langChoose {
	clear: both;
}

.undoredoMode {
	kbd {
		box-shadow: none;
	}
	li.lightLine {
		border-radius: $rounded;
	}
	&:hover kbd {
		box-shadow: 1px 0 1px 0 #EEE, 0 2px 0 2px #CCC, 0 2px 0 3px #666;
	}
	&>.optionList {
		opacity: 0;
	}
	&:hover>.optionList {
		opacity: 1;
		transition: opacity 1s ease;
	}
	&:hover {
		li.lightLine {
			background-color: rgba(255, 255, 255, 0.6);
			padding: {
				top: 4px;
				bottom: 4px;
			}
		}
	}
}

.optionList {
	margin-top: 10px;
	display: block;
	clear: both;
	.checkText,
	.hotkey {
		margin-top: 0;
	}
	>li {
		/*
		@include oneLineControlsHeight ($oneLineControlsHeight - 10);
		*/
		cursor: default;
		margin-bottom: 10px;
		margin-left: $oneLineControlsHeight - 5;
		padding-left: 6px;
		font-weight: 100;
	}
	.shortcutsList {
		width: 8em;
		text-align: right;
		kbd {
			font-size: 0.6em;
			box-shadow: 1px 0 1px 0 #EEE, 0 2px 0 2px #CCC, 0 2px 0 3px #CCC;
		}
	}
}

#supportList {
	&>li {
		@include oneLineControlsHeight ($oneLineControlsHeight);
		padding: {
			top: 10px;
			right: 40px;
			bottom: 10px;
			left: 40px;
		}
		margin: {
			right: -40px;
			bottom: 10px;
			left: -40px;
		}
		cursor: pointer;
		clear: both;
		display: block;
		&:hover {
			background-color: $fakeBlurColor;
		}
		&>img {
			float: left;
			width: $oneLineControlsHeight;
			max-width: $oneLineControlsHeight;
			max-height: $oneLineControlsHeight;
		}
		&>h3 {
			float: left;
			margin-left: 10px;
		}
	}
}

#donate {
	cursor: default;
	height: auto;
}

#qrcode {
	display: block;
	position: static;
	clear: both;
	img {
		width: $ControlsWidth;
		max-width: $ControlsWidth;
		max-height: $ControlsWidth;
		margin: {
			top: $oneLineControlsHeight;
			left: $oneLineControlsHeight;
			right: $oneLineControlsHeight;
			bottom: 10px;
		}
		float: none;
	}
}

#githubButton {
	div {
		@include borderNormal;
		@include oneLineControlsHeight (26px);
		font: {
			size: 12px;
			weight: 600;
		}
		background: {
			image: linear-gradient(to bottom, #FAFBFC, #E4EBF0);
			repeat: repeat-x;
			size: 110% 110%;
			color: #EFF3F6;
		}
		margin-left: 1em;
		color: #24292E;
		text-decoration: none;
		outline: 0;
		vertical-align: middle;
		width: $oneLineControlsHeight;
		padding: 0 10px;
		display: inline-block;
	}
	svg {
		fill: #24292E;
		height: 16px;
		position: relative;
		top: 4px;
	}
}

input {
	@include borderNormal;
	@include oneLineControlsHeight ($oneLineControlsHeight - 10);
	margin-bottom: 10px;
	font-size: 0.8em;
	background-color: transparent;
	box-sizing: border-box;
	border: {
		width: 1px;
		style: solid;
		color: transparent;
		radius: $rounded;
	}
	&:-ms-input-placeholder {
		color: $fontLightColor;
	}
	&::placeholder {
		color: $fontLightColor;
	}
	&:hover,
	&:focus {
		border: {
			color: $blue;
		}
		background-color: $white;
	}
	&[type=text] {
		padding: {
			left: 10px;
			right: 10px;
		}
	}
	&[type=number] {
		text-align: center;
		-moz-appearance: textfield;
		&::-webkit-outer-spin-button,
		&::-webkit-inner-spin-button {
			-webkit-appearance: none;
			margin: 0;
		}
	}
}

#intervals {
	position: relative;
	z-index: 1;
	float: right;
	width: $ControlsWidth;
	padding-left: 0;
	padding-right: $ControlsWidth/2;
	background-color: transparent;
	&:hover+#min {
		background-color: $white;
	}
}

#min {
	@include oneLineControlsHeight ($oneLineControlsHeight - 10);
	position: relative;
	border-radius: $rounded;
	float: right;
	left: $ControlsWidth;
	width: $ControlsWidth/2;
	padding-left: $ControlsWidth/2;
	text-align: center;
	font-size: 0.8em;
}

div.button {
	@include borderNormal;
	/* 
	@include oneLineControlsHeight ($oneLineControlsHeight);
	margin-bottom: 10px;
	*/
	font-size: 1em;
	box-sizing: border-box;
	display: block;
	text-align: center;
	cursor: pointer;
	background-color: transparent;
	&:hover {
		border-color: $blue;
		color: $blue;
	}
}

#photoshopPath {
	@include oneLineControlsHeight ($oneLineControlsHeight - 10);
	font-size: 0.6em;
}

input[type=checkbox].select {
	position: absolute;
	left: -9999px;
	&+label {
		@extend div.button;
		margin-top: 60px;
		&+div {
			overflow: hidden;
			position: absolute;
			z-index: 2;
			width: calc(100% - 160px);
			display: block;
			background-color: #ffffff;
			left: $oneLineControlsHeight * 2;
			height: 0;
			transition: height 0.3s ease;
			h4 {
				display: block;
				clear: both;
				margin: {
					top: 10px;
					bottom: 10px;
				}
			}
		}
	}
	&:checked {
		&+label {
			cursor: default;
			font-size: 0;
			display: block;
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			margin: 0;
			padding: 40px;
			z-index: 1;
			border-width: 0;
			border-radius: 0;
			background-color: rgba(255, 255, 255, 0.9);
			transition: background-color 1s ease;
			@include prefix(backdrop-filter,
			blur(30px),
			('-webkit-'));
			&+div {
				@include prefix(box-shadow,
				0 0 40px 0 rgba(0,
				0,
				0,
				0.3),
				('-webkit-'));
				padding: 20px;
				height: 410px;
				transition: height 0.3s ease;
			}
		}
	}
}

#psCCList,
#psCSList,
#psOLDList {
	label {
		@include borderNormal;
		@include oneLineControlsHeight(40px);
		margin: {
			right: 10px;
			bottom: 10px;
		}
		padding: {
			left: 10px;
			right: 10px;
		}
		cursor: pointer;
		width: calc((100% - 20px * 2) / 5 - 24px);
		text-align: center;
		float: left;
		&:hover {
			border-color: $blue;
			color: $blue;
		}
		&.curPsVer {
			cursor: default;
			background-color: $blue;
			border-width: 0;
			color: $white;
			&:hover {
				color: $white;
			}
		}
	}
}

fieldset {
	>input[type='checkbox'].switch+label {
		margin-top: 10px;
		@include oneLineControlsHeight ($oneLineControlsHeight);
		&::before {
			@include oneLineControlsHeight ($oneLineControlsHeight);
		}
		&>ul {
			height: $oneLineControlsHeight;
			li {
				@include oneLineControlsHeight ($oneLineControlsHeight);
				font-size: 1em;
			}
		}
	}
	>.hotkey {
		margin-top: 10px;
	}
}

input[type='checkbox'].switch {
	position: absolute;
	left: -9999px;
	&+label {
		/*
		@include oneLineControlsHeight ($oneLineControlsHeight - 10);
		*/
		cursor: pointer;
		position: absolute;
		right: $oneLineControlsHeight;
		width: $ControlsWidth;
		padding: 0;
		margin: 0;
		border-width: 0;
		background-color: transparent;
		transition: background-color 1s ease;
		&::before {
			@include borderNormal;
			@include prefix(transition-property,
			left,
			('-webkit-'));
			@include prefix(transition-duration,
			0.5s,
			('-webkit-'));
			@include prefix(transition-timing-function,
			ease,
			('-webkit-'));
			content: '';
			position: absolute;
			display: block;
			top: 0;
			bottom: 10px;
			width: $ControlsWidth/2;
			height: $oneLineControlsHeight - 10;
			box-sizing: border-box;
			left: 0;
		}
		&>ul {
			position: absolute;
			right: 0;
			width: $ControlsWidth;
			height: $oneLineControlsHeight - 10;
			li {
				@include oneLineControlsHeight ($oneLineControlsHeight - 10);
				background-color: transparent;
				display: block;
				float: left;
				width: $ControlsWidth/2;
				box-sizing: border-box;
				text-align: center;
				font-size: 0.8em;
			}
			li:nth-child(1) {
				float: left;
				color: $fontColor;
			}
			li:nth-child(2) {
				display: block;
				float: right;
				color: $fontLightColor;
			}
		}
	}
	&:checked {
		&+label {
			&>ul {
				li:nth-child(1) {
					float: left;
					color: $fontLightColor;
				}
				li:nth-child(2) {
					display: block;
					float: right;
					color: $fontColor;
				}
			}
			&::before {
				@include prefix(transition-property,
				left,
				('-webkit-'));
				@include prefix(transition-duration,
				0.5s,
				('-webkit-'));
				@include prefix(transition-timing-function,
				ease,
				('-webkit-'));
				left: $ControlsWidth/2;
			}
		}
	}
}

#autoSaveSwitch {
	&:checked+label+ul.optionList {
		display: block;
	}
	&+label+ul.optionList {
		display: none;
	}
}
fieldset:hover {
	input[type='text'] {
		border-color: $borderColor;
	}
}

#tipText {
	#tipTextSwitch:checked {
		&+label+input[type='text'] {
			display: block;
		}
	}
	input[type='text'] {
		width: 100%;
		margin-top: 10px;
		display: none;
	}
}